#!/usr/bin/env bash

#Variables
path=""
# Establecer colores de texto
RED="\[\e[31m\]"
GREEN="\[\e[32m\]"
YELLOW="\[\e[33m\]"
BLUE="\[\e[34m\]"
MAGENTA="\[\e[35m\]"
CYAN="\[\e[36m\]"
WHITE="\[\e[37m\]"
# Establecer estilo de texto
BOLD="\[\e[1m\]"
UNDERLINE="\[\e[4m\]"
INVERT="\[\e[7m\]"
# Restablecer todos los estilos y colores
RESET="\[\e[0m\]"

# Función para guardar lista de hosts en un archivo
save_hosts_list() {
	network="${1}"
	path="${network/\//-}/"
	mkdir -p "${path}"
	nmap -sn "${network}" -oG "${path}hosts_list.txt"
}
# Función para escanear una red completa
scan_whole_network() {
	while true; do
		echo -n "Ingrese la red a escanear (ej. 192.168.1.0/24): "; read -r network
		[[ ${network} =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}$ ]] && break
	done
	save_hosts_list "${network}"
	echo "Lista de hosts guardada en \"${network/\//-}/hosts_list.txt\""
}
scan_a_network() {
	:
}
# Función para realizar el escaneo Nmap
run_nmap_scan() {
	target="${1}"
	output_file="${2}"
	echo "Running Nmap scan on \"${target}\"..."
	nmap "${target}" -oN "${output_file}"
}
# Función para seleccionar el tipo de escaneo Nmap
select_scan_type() {
	network="${1}"
	path=""
	while true; do
		echo -n "Ingrese el host a escanear: "; read -r target
		if [[ ${network} =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}$ ]]; then
			path="${network/\//-}/"
			mkdir -p "${path}"
		else
			path="${target}/"
			mkdir -p "${path}"
		fi
		[[ ${target} =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]] && break
	done
	echo -e "A) Identificar el sistema operativo (-O)\nB) Enumerar servicios (-sV)\nC) Escaneo TCP SYN (Stealth/Sigiloso) (-sS)\nD) Escaneo TCP Connect (Less stealthy/Menos sigiloso) (-sT)\nE) Escaneo UDP en puertos comunes (-sU)\nF) Ping Sweep (TCP ACK/Complemento de ICMP) (-PA)\nG) Ping tradicional (ICMP) (-sn)\nH) Escaneo Agresivo (-A)\nInput> "; read -r option
	option="$(echo "${option}" | tr '[:lower:]' '[:upper:]')"
	case $option in
		A) #Identificar el sistema operativo (-O)
			run_nmap_scan "-O" "${path}os_detection-${target}.txt"
			;;
		B) #Enumerar servicios (-sV)
			run_nmap_scan "-sV" "${path}service_enumeration-${target}.txt"
			;;
		C) #Escaneo TCP SYN (Stealth/Sigiloso) (-sS)
			run_nmap_scan "-sS" "${path}tcp_syn_scan-${target}.txt"
			;;
		D) #Escaneo TCP Connect (Less stealthy/Menos sigiloso) (-sT)
			run_nmap_scan "-sT" "${path}tcp_connect_scan-${target}.txt"
			;;
		E) #Escaneo UDP en puertos comunes (-sU)
			run_nmap_scan "-sU --top-ports 100" "${path}udp_scan-${target}.txt"
			;;
		F) #Ping Sweep (TCP ACK/Complemento de ICMP) (-PA)
			run_nmap_scan "-PA" "${path}ping_sweep-${target}.txt"
			;;
		G) #Ping tradicional (ICMP) (-sn)
			run_nmap_scan "-sn" "${path}icmp_ping-${target}.txt"
			;;
		H) #Escaneo Agresivo
			run_nmap_scan "-A" "${path}aggressive_scan-${target}.txt"
			;;
	esac
}
# Función principal
main() {
	while true; do
		# Seleccionar entre escanear una red completa o un host específico
		while true; do
			echo -n "¿Deseas escanear una red completa? (Y/n): "; read -r option # scan_whole_network
			option="$(echo "${option}" | tr '[:lower:]' '[:upper:]')"
			[ "${option}" = "Y" ] || [ "${option}" = "N" ] && break
		done
		if [ "${option}" = "Y" ]; then #A network
			scan_whole_network
		else #A host
			while true; do
				echo -n "¿El host es parte de una red? (Y/n): "; read -r option
				option="$(echo "${option}" | tr '[:lower:]' '[:upper:]')"
				[ "${option}" = "Y" ] || [ "${option}" = "N" ] && break
			done
			if [ "${option}" = "Y" ]; then
				while true; do
					echo -en "¿Cúal es esa red?\n$(ls -d */ | grep '-' | tr '/' ' ' | tr '\n' ' ')etc.\n> "; read -r network
					[[ ${network} =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}\/[0-9]{1,2}$ ]] && break
				done
				select_scan_type "${network}"
			else
				select_scan_type
			fi
		fi
		while true; do
			echo -n "¿Quieres continuar? (Y/n): "; read -r option
			option="$(echo "${option}" | tr '[:lower:]' '[:upper:]')"
			[ "${option}" = "Y" ] || [ "${option}" = "N" ] && break
		done
		[ "${option}" = "N" ] && break
	done
	echo "===== Escaneos completados ====="
}
echo "===== Reconocimiento - Nmap Script ====="
# Ejecutar el script
main
